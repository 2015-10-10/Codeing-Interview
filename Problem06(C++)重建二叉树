/**题目描述
*输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。
*例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。
*/
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution
{
public:
    struct TreeNode* reConstructBinaryTree(vector<int> pre,vector<int> in)
    {
        TreeNode *root = NULL;
        return build(pre, 0, pre.size() - 1, in, 0, in.size() - 1);
        //return root;
    }
 
    TreeNode *build(const vector<int> &pre, int pre_l, int pre_r,
                const vector<int> &in, int in_l, int in_r)
    {
        TreeNode *root = NULL;
        if (pre_l <= pre_r)
        {
            root = new TreeNode(pre[pre_l]);
            int len = 0;
            for (int i = in_l; i <= in_r && in[i] != pre[pre_l]; ++i)
            {
                ++len;
            }
            root->left = build(pre, pre_l + 1, pre_l + len,
                in, in_l, in_l + len - 1);
            root->right = build(pre, pre_l + len + 1, pre_r,
                in, in_l + len + 1, in_r);
        }
        return root;
    }
};
